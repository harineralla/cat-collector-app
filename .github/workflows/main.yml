name: continuous_integration

on: push

jobs:
  build_and_test:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:13
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}
          POSTGRES_DB: cat_collector
        options: >-
          --health-cmd="pg_isready -U postgres"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5
        ports:
          - 5432:5432

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Install Dependencies
        run: |
          cd flask-app
          pip install -r requirements.txt

      - name: Wait for PostgreSQL to be ready
        run: |
          for i in {1..10}; do
            pg_isready -h localhost -p 5432 -U postgres && break
            sleep 2
          done

      - name: Set up Database
        env:
          PGPASSWORD: ${{ secrets.POSTGRES_PASSWORD }}
        run: |
          psql -h localhost -U postgres -tc "SELECT 1 FROM pg_database WHERE datname = 'cat_collector'" | grep -q 1 || psql -h localhost -U postgres -c "CREATE DATABASE cat_collector;"
          psql -h localhost -U postgres -d cat_collector -f flask-app/init_db.sql

      - name: Run Tests
        run: |
          cd flask-app
          python -m unittest discover
